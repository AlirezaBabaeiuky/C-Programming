#include <stdio.h>
#include <math.h>

#define SIZE 100
#define RANGE 10.0

double f(double x) {
    return sin(x) - tanh(x) + cos(exp(x)); 
}

int main() {
    double x_vals[SIZE];
    double y_vals[SIZE];
    double step = RANGE / SIZE;
    double max_y = f(0.0);
    double max_x = 0.0;
    
    // Store all calculated values
    for (int i = 0; i < SIZE; i++) {
        x_vals[i] = i * step;
        y_vals[i] = f(x_vals[i]);
        
        // Find maximum value
        if (y_vals[i] > max_y) {
            max_y = y_vals[i];
            max_x = x_vals[i];
        }
    }

    printf("Maximum value is: %.6f at x = %.6f\n", max_y, max_x);
    
    return 0;
}

/*
#include <stdio.h>
# include <math.h>

int factorial (int N) { 
    int fac = 1;
    for (int i=1; i<=N; i++) { 
        fac = fac*i;
    }
    printf("%d factorial is: %d", N, fac);
}

int main()
{
    int X = 5; 
    factorial(X); 

    return 0;
}
No, that code is invalid in C. If a function is declared to return a type other than void, it must explicitly use a return statement to send a value back to the caller.
*/   
